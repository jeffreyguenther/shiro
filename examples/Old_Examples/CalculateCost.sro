node Cost[mult] begin
    input area Double
    input costPerSqft Double
    option eval mult Multiply(area, costPerSqft)
    option eval withTax Double(area * costPerSqft * 1.12)
    output total Double(active)
end

node Shape begin
	option node Circle begin
		input length Double
        eval update CircleArea(length[0])
        output area Double(update["area"])
	end
	option node Square begin
        input length Double
        eval update SquareArea(length[0])
        output area Double(udpate["area"])
    end
end

graph shapes begin
    Shape -> s
    Cost -> c

    s.length(22)

    c.area(s.area)
    c.costPerSqft(0.34)
end

state byCircleArea begin 
    Graph shapes
    s[Circle]
    // Because c has a default option picked, a subjunct selection is not needed. It's syntactical sugar
end

state bySquareArea begin
    Graph shapes
    s[Square]
    c[mult]
end

state ByCircleAreaWithTax begin
    Graph shapes
    s[Circle]
    c[withTax]
end

state BySquareAreaWithTax begin
    Graph shapes
    s[Square]
    c[withTax]
end